View(Sal19)
Class = Sal19 %>%
group_by(Class) %>%
summarize(Avg = mean(Salary))
View(Class)
ggplot(Class, aes(x = Class, y =  Salary)) + geom_bar()
ggplot(Class, aes(x = Class, y =  Avg)) + geom_bar()
ggplot(Class, aes(x = Class, y =  Avg)) + geom_bar()
ggplot(Class, aes(x = Class, y =  Avg)) + geom_boxplot()
ggplot(Class, aes(x = Class, y =  Avg)) + geom_line()
ggplot(Class, aes(x = Class, y =  Avg)) +
geom_bar(stat = 'identity')
ggplot(Class, aes(y = Class, x =  Avg)) +
geom_bar(stat = 'identity')
ggplot(Class, aes(y = Class, x =  Avg)) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(Class, aes(y = Class, x =  Avg)) +
geom_bar(stat = 'identity')
ggplot(Class, aes(x = Class, y =  Avg)) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(Class, aes(x = Class, y =  reorder(Avg))) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(Class, aes(x = Class, y =  Avg)) +
geom_bar(stat = 'identity') + coord_flip()
Class = Class[order(Salary),]
Class = Class[order(Class$Salary),]
Class = Sal19 %>%
group_by(Class) %>%
summarize(Avg = mean(Salary)) %>%
arrange(Salary)
Class = Sal19 %>%
group_by(Class) %>%
summarize(Avg = mean(Salary)) %>%
arrange(Avg)
ggplot(Class, aes(x = Class, y =  Avg)) +
geom_bar(stat = 'identity') + coord_flip()
Class = Sal19 %>%
group_by(Class) %>%
summarize(Avg = mean(Salary)) %>%
arrange(Avg)
ggplot(Class, aes(x = Class, y =  Avg)) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(Class, aes(x = reorder(Class,Avg), y =  Avg)) +
geom_bar(stat = 'identity') + coord_flip()
Sal19[1,]
Sal19[1,Class]
Sal19[1,'Class']
Sal19[1,'Class'] == "NA"
val = Sal19[1,'Class']
val
val == "NA"
ifelse(val == "NA",print('yes',print('no')))
ifelse(val == 'NA",print('yes'),print('no'))
val = ifelse(val == "NA",'yes','no')
val
Sal19 = Sal19 %>%
mutate(
Class = ifelse(Class == "NA","Other",Class)
)
Sal19 = Sal19 %>%
mutate(
Class = replace_na(Class,"Other")
)
Class = Sal19 %>%
group_by(Class) %>%
summarize(Avg = mean(Salary)) %>%
arrange(Avg)
ggplot(Class, aes(x = reorder(Class,Avg), y =  Avg)) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(Class, aes(x = reorder(Class,Avg), y =  Avg)) +
geom_bar(stat = 'identity') + coord_flip() + ylab("Status") +
xlab("Average Salary")
Sal03 = read_excel("Sal03.xlsx")
Sal03 = Sal03 %>%
mutate(
Class = replace_na(Class,"Other")
)
Class03 = Sal03 %>%
group_by(Class) %>%
summarize(Avg = mean(Salary)) %>%
arrange(Avg)
ggplot(Class03, aes(x = reorder(Class,Avg), y = Avg)) +
geom_bar(stat = 'identity') + coord_flip()
Sal19 = Sal19 %>%
mutate(
Class = as.factor(replace_na(Class,"Other"))
)
name = "Sal09.xlsx"
str_sub(name,4,5)
2000 + as.numeric(str_sub(name,4,5))
dat = import_sal("Sal19.xlsx")
import_sal <- function(filename) {
dataframe = read_excel(filename)
dataframe = dataframe %>%
mutate(
Class = replace_na(Class,"Other"),
Year = 2000 + as.numeric(str_sub(filename,4,5))
)
return(dataframe)
}
dat = import_sal("Sal19.xlsx")
View(dat)
import_sal <- function(filename) {
dataframe = read_excel(filename)
dataframe = dataframe %>%
mutate(
Class = replace_na(Class,"Other"),
Year = 2000 + as.numeric(str_sub(filename,4,5))
) %>%
select(c(Class,Salary,Year))
return(dataframe)
}
dat = import_sal("Sal19.xlsx")
View(dat)
sapply(years,sprintf,fmt = "Sal%.xlsx")
years = c("03",'04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19')
sapply(years,sprintf,fmt = "Sal%.xlsx")
sapply(years,sprintf,fmt = "Sal%s.xlsx")
datasets = sapply(filenames,import_sal)
filenames = sapply(years,sprintf,fmt = "Sal%s.xlsx")
datasets = sapply(filenames,import_sal)
datasets
emptydf = data.frame()
all = rbind_all(datasets)
?rrbind_all
?rbind_all
datasets = lapply(filenames,import_sal)
datasets = lapply(filenames,import_sal)
all = rbind_all(datasets)
all = bind_rows(datasets)
View(all)
colnames(all)
summary = all %>%
group_by(Class,Year) %>%
summarize(medianSalary = median(Salary))
View(summary)
summary = mutate(summary,
Class = as.factor(Class))
all = all %>%
mutate(
Class = as.factor(Class)
)
summary = all %>%
group_by(Class,Year) %>%
summarize(medianSalary = median(Salary))
type(summary$Class)
ggplot(summary, aes(x = Class, y = medianSalary)) +
geom_bar(stat = 'identity')
ggplot(summary, aes(x = Class, y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip()
summary = all %>%
group_by(Class,Year) %>%
summarize(medianSalary = median(Salary)) %>%
filter(!(Class %in% c("Instructor","Affliate Librarian")))
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip()
summary = all %>%
group_by(Class,Year) %>%
summarize(medianSalary = median(Salary)) %>%
filter(!(Class %in% c("Instructor","Affiliate Librarian")))
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip()
library(gganimate)
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
transition_states(Year,
transition_length = 2,
state_length = 1)
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
transition_states(Year,
transition_length = 2,
state_length = 1) +
ggtitle("Year {closest_state}",
subtitle = "Frame {frame} of {nframes}")
?scale_x_discrete
?scale_x_continuous
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
ylab("Posistion") +
xlab("Median Salary of Posistion") +
scale_x_continuous(breaks = seq(20000,200000,25000))
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
ylab("Posistion") +
xlab("Median Salary of Posistion") +
scale_x_continuous(breaks = seq(20000,200000,25000)) +
transition_states(Year,
transition_length = 2,
state_length = 1) +
ggtitle("Year {closest_state}",
subtitle = "Frame {frame} of {nframes}")
typeof(summary$medianSalary)
summary = all %>%
group_by(Class,Year) %>%
summarize(medianSalary = median(Salary)/100) %>%
filter(!(Class %in% c("Instructor","Affiliate Librarian")))
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
ylab("Posistion") +
xlab("Median Salary of Posistion") +
transition_states(Year,
transition_length = 2,
state_length = 1) +
ggtitle("Year {closest_state}",
subtitle = "Frame {frame} of {nframes}")
summary = all %>%
group_by(Class,Year) %>%
summarize(medianSalary = median(Salary)) %>%
filter(!(Class %in% c("Instructor","Affiliate Librarian")))
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
xlab("Posistion") +
ylab("Median Salary of Posistion") +
transition_states(Year,
transition_length = 2,
state_length = 1) +
ggtitle("Year {closest_state}",
subtitle = "Frame {frame} of {nframes}")
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
xlab("Posistion") +
ylab("Median Salary of Posistion") +
y_scale_continous(breaks = seq(20000,200000,25000))
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
xlab("Posistion") +
ylab("Median Salary of Posistion") +
scale_y_continuous(breaks = seq(20000,200000,25000)) +
transition_states(Year,
transition_length = 2,
state_length = 1) +
ggtitle("Year {closest_state}",
subtitle = "Frame {frame} of {nframes}")
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
xlab("Posistion") +
ylab("Median Salary of Posistion") +
scale_y_continuous(breaks = seq(20000,200000,25000)) +
transition_states(Year,
transition_length = 2,
state_length = 1) +
ggtitle("IU Bloomington Falculty Salary Through The Years",
subtitle = "Year {closest_state}")
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
xlab("Posistion") +
ylab("Median Salary of Posistion") +
scale_y_continuous(breaks = seq(20000,225000,25000)) +
transition_states(Year,
transition_length = 2,
state_length = 1) +
ggtitle("IU Bloomington Falculty Salary Through The Years",
subtitle = "Year {closest_state}")
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
xlab("Posistion") +
ylab("Median Salary of Posistion") +
scale_y_continuous(breaks = seq(20000,200000,10000)) +
transition_states(Year,
transition_length = 2,
state_length = 1) +
ggtitle("IU Bloomington Falculty Salary Through The Years",
subtitle = "Year {closest_state}")
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
xlab("Posistion") +
ylab("Median Salary of Posistion") +
scale_y_continuous(breaks = seq(20000,200000,20000)) +
transition_states(Year,
transition_length = 2,
state_length = 1) +
ggtitle("IU Bloomington Falculty Salary Through The Years",
subtitle = "Year {closest_state}")
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
xlab("Posistion") +
ylab("Median Salary of Posistion (Thousands)") +
scale_y_continuous(breaks = seq(20,200,20)) +
transition_states(Year,
transition_length = 2,
state_length = 2) +
ggtitle("IU Bloomington Falculty Salary Through The Years",
subtitle = "Year {closest_state}")
summary = all %>%
group_by(Class,Year) %>%
summarize(medianSalary = median(Salary)/1000) %>%
filter(!(Class %in% c("Instructor","Affiliate Librarian")))
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
xlab("Posistion") +
ylab("Median Salary of Posistion (Thousands)") +
scale_y_continuous(breaks = seq(20,200,20)) +
transition_states(Year,
transition_length = 2,
state_length = 2) +
ggtitle("IU Bloomington Falculty Salary Through The Years",
subtitle = "Year {closest_state}")
ggplot(summary, aes(x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
xlab("Posistion") +
ylab("Median Salary of Posistion (Thousands)") +
scale_y_continuous(breaks = seq(20,200,20)) +
transition_states(Year,
transition_length = 2,
state_length = .5) +
ggtitle("IU Bloomington Falculty Salary Through The Years",
subtitle = "Year {closest_state}")
anim_save("IUSalary.gif",animation = salary_gif)
salary_gif = ggplot(summary, aes(
x = reorder(Class,medianSalary), y = medianSalary)) +
geom_bar(stat = 'identity') + coord_flip() +
xlab("Posistion") +
ylab("Median Salary of Posistion (Thousands)") +
scale_y_continuous(breaks = seq(20,200,20)) +
transition_states(Year,
transition_length = 2,
state_length = .5) +
ggtitle("IU Bloomington Falculty Salary Through The Years",
subtitle = "Year {closest_state}")
anim_save("IUSalary.gif",animation = salary_gif)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyverse)
library(gganimate)
Sal19 = read_excel("Sal19.xlsx")
View(Sal19)
Sal19 = import_sal("Sal19.xlsx")
View(Sal19)
length(which(Sal19$Class == "Professor"))
length(which("Professor" %in% Sal19$Class))
dataframe = dataframe %>%
mutate(
Class = replace_na(Class,"Other"),
Year = 2000 + as.numeric(str_sub(filename,4,5))
Class = as.factor(Class)
import_sal <- function(filename) {
dataframe = read_excel(filename)
dataframe = dataframe %>%
mutate(
Class = replace_na(Class,"Other"),
Year = 2000 + as.numeric(str_sub(filename,4,5))
Class = as.factor(Class)
dataframe = dataframe %>%
mutate(
Class = replace_na(Class,"Other"),
Year = 2000 + as.numeric(str_sub(filename,4,5)),
Class = as.factor(Class)
) %>%
select(c(Class,Salary,Year))
import_sal <- function(filename) {
dataframe = read_excel(filename)
dataframe = dataframe %>%
mutate(
Class = replace_na(Class,"Other"),
Year = 2000 + as.numeric(str_sub(filename,4,5)),
Class = as.factor(Class)
) %>%
select(c(Class,Salary,Year))
return(dataframe)
}
Sal19 = import_sal("Sal19.xlsx")
levels(Sal19$Class)
Professors = Sal19 %>%
filter("Professor" %in% Class)
View(Professors)
ProfPositions = c("Associate Professor","Assistant Professor","Professor")
Professors = Sal19 %>%
filter(sum(Class == ProfPositions)>=1)
Professors = Sal19 %>%
filter(sum(Class == ProfPositions)>=1)
Professors = Sal19 %>%
filter(Class == "Associate Professor" |
Class == "Assistant Professor" |
Class == "Professor")
length(which(Professors$Classs == "Professor"))
length(which(Professors$Class == "Professor"))
784/nrow(Professors)
Sal19 = read_excel("Sal19.xlsx")
CSCI = Sal19 %>%
filter(Org == "CSCI")
View(CSCI)
CSCI = Sal19 %>%
filter(Org == "CSCI") %>%
select(c(Name,Class,Salary))
length(which(Sal19$Class == 'Librarian'))
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
# library imports go here
library(tidyverse)
library(GGally)
library(broom)
library(ggpubr)
# read in data
Source <- read.csv("DFP_WTHH_release.csv")
df = Source
colnames(df)[1] = "ID"
#Removed worthless columns
df = df %>%
select(c(ID,presvote16post,house3,weight_DFP,M4A,
GREENJOB,WEALTH,MARLEG,ICE,GUNS,
POP_1,POP_2,POP_3))
df = df %>%
mutate(
Swinger = ifelse(presvote16post == house3 &
presvote16post %in% c(1,2),FALSE,TRUE),
Party = ifelse(presvote16post == house3 &
presvote16post %in% c(1,2),
ifelse(presvote16post == 1,"Democrat","Repulican"),
"Swinger")
)
# remove rows with NA conflicts
df <- df[-c(2647, 3042, 3200),]
# separate data into groups based on voting pattern
loyalD = df %>%
filter(presvote16post == 1 & house3 == 1)
loyalR = df %>%
filter(presvote16post == 2 & house3 == 2)
loyal <- rbind(loyalD, loyalR)
switchD = df %>%
filter(presvote16post != 1 & house3 == 1) %>%
mutate(Partyto = "Democrat")
switchR = df %>%
filter(presvote16post != 2 & house3 == 2) %>%
mutate(Partyto = "Republican")
switchers = rbind(switchD,switchR)
# subset data
issues = df %>%
select(c(Swinger,M4A,GREENJOB,WEALTH,MARLEG,ICE,GUNS))
IssueSwitchPlot <- function(dataframe,issue) {
ggplot(dataframe, aes(x = !!ensym(issue),
group = Partyto,
colour = Partyto,
fill = Partyto)) +
geom_bar() +
facet_wrap(~Partyto,nrow = 2,scales = "free_y") +
ylab("") +
xlab("") +
scale_fill_manual(name = "Party Switched To",
values = c("#0015BC","#E9141D")) +
scale_color_manual(name = "Party Switched To",
values = c("#0015BC","#E9141D"))
}
wantedIssues = c("M4A","GREENJOB",'WEALTH','MARLEG','ICE','GUNS')
plot_list = lapply(wantedIssues, IssueSwitchPlot, dataframe = switchers)
figLabels = c("Medicare for All","Green Jobs Program","Wealth Tax",
"Legalize Marijuana","Defunding ICE","Gun Control")
plotGrid = ggarrange(plotlist = plot_list,
nrow = 3,
ncol = 2,
common.legend = TRUE,
legend = "bottom",
labels = figLabels)
annotate_figure(plotGrid,
top = text_grob("How Swing Voters Feel on different Issues",
size = 36),
bottom = text_grob("Survey Results on Scale 1-5, 1 = Strongly Support, 5 = Strongly Oppose (6 = \"Not Sure\")",size = 24),
left = text_grob("Count"))
?text_grob
annotate_figure(plotGrid,
top = text_grob("How Swing Voters Feel on different Issues",
size = 36),
bottom = text_grob("Survey Results on Scale 1-5, 1 = Strongly Support, 5 = Strongly Oppose (6 = \"Not Sure\")",size = 24),
left = text_grob("Count",size = 24,rot = 90))
annotate_figure(plotGrid,
top = text_grob("How Swing Voters Feel on different Issues",
size = 36),
bottom = text_grob("Survey Results on Scale 1-5, 1 = Strongly Support, 5 = Strongly Oppose (6 = \"Not Sure\")",size = 24),
left = text_grob("Count",size = 30,rot = 90))
knitr::opts_chunk$set(echo = TRUE, cache = TRUE,warning = FALSE)
# library imports go here
library(tidyverse)
library(GGally)
library(broom)
library(ggpubr)
# read in data
Source <- read.csv("DFP_WTHH_release.csv")
df = Source
colnames(df)[1] = "ID"
#Removed worthless columns
df = df %>%
select(c(ID,presvote16post,house3,weight_DFP,M4A,
GREENJOB,WEALTH,MARLEG,ICE,GUNS,
POP_1,POP_2,POP_3))
df = df %>%
mutate(
Swinger = ifelse(presvote16post == house3 &
presvote16post %in% c(1,2),FALSE,TRUE),
Party = ifelse(presvote16post == house3 &
presvote16post %in% c(1,2),
ifelse(presvote16post == 1,"Democrat","Repulican"),
"Swinger")
)
# remove rows with NA conflicts
df <- df[-c(2647, 3042, 3200),]
# separate data into groups based on voting pattern
loyalD = df %>%
filter(presvote16post == 1 & house3 == 1)
loyalR = df %>%
filter(presvote16post == 2 & house3 == 2)
loyal <- rbind(loyalD, loyalR)
switchD = df %>%
filter(presvote16post != 1 & house3 == 1) %>%
mutate(Partyto = "Democrat")
switchR = df %>%
filter(presvote16post != 2 & house3 == 2) %>%
mutate(Partyto = "Republican")
switchers = rbind(switchD,switchR)
# subset data
issues = df %>%
select(c(Swinger,M4A,GREENJOB,WEALTH,MARLEG,ICE,GUNS))
