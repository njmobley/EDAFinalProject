Class = as.factor(Class)
) %>%
select(c(Class,Salary,Year))
return(dataframe)
}
#FUNCTION TO IMPORT GRADES
import_grade <- function(filename) {
dataframe = read_csv(filename)
dataframe = dataframe %>%
select(`INSTRUCTOR NAME`,
`AVG SECT GPA`,`GPA GRADES`)
dataframe = na.omit(dataframe) %>%
inner_join(dataframe %>%
group_by(`INSTRUCTOR NAME`) %>%
summarize(totalGPA = sum(`GPA GRADES`))) %>%
group_by(`INSTRUCTOR NAME`) %>%
summarize(
gpaAverage = sum(`AVG SECT GPA` * (`GPA GRADES`/totalGPA)),
nStudents = max(totalGPA),
year = 2000 + as.numeric(str_sub(filename,19,20))
)
return(dataframe)
}
View(import_grade("Data/Grades/Grades18.csv"))
#FUNCTION TO FIX NAMES OF TEACHERS
grade_to_salName <- function(name) {
tryCatch({
split = str_split(name, ",", simplify = T)
lastName = split[[1]]
firstName = split[[2]] %>%
str_split(" ",simplify = T) %>%
str_sub(1,1) %>%
str_c(collapse = "")
return(str_c(lastName,firstName,sep = ", "))},
error = function(e) print(name)
)
}
#FUNCTION TO IMPORT SALARIES
import_sal <- function(filename) {
dataframe = read_excel(filename)
dataframe = dataframe %>%
mutate(
Class = replace_na(Class,"Other"),
Year = 2000 + as.numeric(str_sub(filename,18,19)),
Class = as.factor(Class)
) %>%
select(c(Class,Salary,Year))
return(dataframe)
}
#FUNCTION TO IMPORT GRADES
import_grade <- function(filename) {
dataframe = read_csv(filename)
dataframe = dataframe %>%
select(`INSTRUCTOR NAME`,
`AVG SECT GPA`,`GPA GRADES`)
dataframe = na.omit(dataframe) %>%
inner_join(dataframe %>%
group_by(`INSTRUCTOR NAME`) %>%
summarize(totalGPA = sum(`GPA GRADES`))) %>%
group_by(`INSTRUCTOR NAME`) %>%
summarize(
gpaAverage = sum(`AVG SECT GPA` * (`GPA GRADES`/totalGPA)),
nStudents = max(totalGPA),
year = 2000 + as.numeric(str_sub(filename,19,20))
) %>%
transmute(
gpaAverage = gpaAverage,
nStudents = nStudents,
year = year,
Name = sapply(`INSTRUCTOR NAME`,grade_to_salName,USE.NAMES = FALSE)
)
return(dataframe)
}
View(import_grade("Data/Grades/Grades18.csv"))
years = c("03",'04','05','06','07','08','09','10',
'11','12','13','14','15','16','17','18','19')
years[8:10]
year[8:]
year[8:n()]
years[8:n()]
years[8:-1]
years[8:length(years)]
years = c("03",'04','05','06','07','08','09','10',
'11','12','13','14','15','16','17','18','19')
salFiles = sapply(years[8:length(years)],sprintf,fmt = "Data/Salaries/Sal%s.xlsx")
salData = lapply(salFiles,import_sal)
gradeFiles = sapply(years[8:length(years)],sprintf,fmt = "Data/Salaries/Grades%s.csv")
gradeData = lapply(gradeFiles,import_grade)
years = c("03",'04','05','06','07','08','09','10',
'11','12','13','14','15','16','17','18','19')
salFiles = sapply(years[8:length(years)],sprintf,fmt = "Data/Salaries/Sal%s.xlsx")
salData = lapply(salFiles,import_sal)
gradeFiles = sapply(years[8:length(years)],sprintf,fmt = "Data/Grades/Grades%s.csv")
gradeData = lapply(gradeFiles,import_grade)
years = c("03",'04','05','06','07','08','09','10',
'11','12','13','14','15','16','17','18','19')
salFiles = sapply(years[8:length(years)],sprintf,fmt = "Data/Salaries/Sal%s.xlsx")
salData = lapply(salFiles,import_sal)
gradeFiles = sapply(years[8:length(years)-1],sprintf,fmt = "Data/Grades/Grades%s.csv")
gradeData = lapply(gradeFiles,import_grade)
View(salData)
View(salData[[1]])
levels(salData[[1]]$Class)
salData = lapply(salData,filter_nonProf)
filter_nonProf <- function(dataframe) {
dataframe %>%
filter(Class %in% c("Lecturer","Senior Lecturer",
"Associate Professor","Assistant Professor",
"Professor"))
}
salData = lapply(salData,filter_nonProf)
View(salData[[1]])
#FUNCTION TO FIX NAMES OF TEACHERS
grade_to_salName <- function(name) {
tryCatch({
split = str_split(name, ",", simplify = T)
lastName = split[[1]]
firstName = split[[2]] %>%
str_split(" ",simplify = T) %>%
str_sub(1,1) %>%
str_c(collapse = "")
return(str_c(lastName,firstName,sep = ", "))},
error = function(e) print(name)
)
}
#FUNCTION TO IMPORT SALARIES
import_sal <- function(filename) {
dataframe = read_excel(filename)
dataframe = dataframe %>%
mutate(
Class = replace_na(Class,"Other"),
Year = 2000 + as.numeric(str_sub(filename,18,19)),
Class = as.factor(Class)
) %>%
select(c(Class,Salary,Year))
return(dataframe)
}
filter_nonProf <- function(dataframe) {
dataframe %>%
filter(Class %in% c("Lecturer","Senior Lecturer",
"Associate Professor","Assistant Professor",
"Professor"))
}
#FUNCTION TO IMPORT GRADES
import_grade <- function(filename) {
dataframe = read_csv(filename)
dataframe = dataframe %>%
select(`INSTRUCTOR NAME`,
`AVG SECT GPA`,`GPA GRADES`)
dataframe = na.omit(dataframe) %>%
inner_join(dataframe %>%
group_by(`INSTRUCTOR NAME`) %>%
summarize(totalGPA = sum(`GPA GRADES`))) %>%
group_by(`INSTRUCTOR NAME`) %>%
summarize(
gpaAverage = sum(`AVG SECT GPA` * (`GPA GRADES`/totalGPA)),
nStudents = max(totalGPA),
year = 2000 + as.numeric(str_sub(filename,19,20))
) %>%
transmute(
gpaAverage = gpaAverage,
nStudents = nStudents,
year = year,
Name = sapply(`INSTRUCTOR NAME`,grade_to_salName,USE.NAMES = FALSE)
)
return(dataframe)
}
years = c("03",'04','05','06','07','08','09','10',
'11','12','13','14','15','16','17','18')
yearsWanted = 8:length(years)
salFiles = sapply(years[yearsWanted],sprintf,fmt = "Data/Salaries/Sal%s.xlsx")
salData = lapply(salFiles,import_sal)
salData = lapply(salData,filter_nonProf)
gradeFiles = sapply(years[yearsWanted],sprintf,fmt = "Data/Grades/Grades%s.csv")
gradeData = lapply(gradeFiles,import_grade)
years = c("03",'04','05','06','07','08','09','10',
'11','12','13','14','15','16','17','18')
yearsWanted = 8:length(years)
salFiles = sapply(years[yearsWanted],sprintf,fmt = "Data/Salaries/Sal%s.xlsx")
salData = lapply(salFiles,import_sal)
salData = lapply(salData,filter_nonProf)
gradeFiles = sapply(years[yearsWanted],sprintf,fmt = "Data/Grades/Grades%s.csv")
gradeData = lapply(gradeFiles,import_grade)
salAll = bind_rows(salData)
gradeAll = bind_rows(gradeData)
View(salAll)
View(gradeAll)
#FUNCTION TO FIX NAMES OF TEACHERS
grade_to_salName <- function(name) {
tryCatch({
split = str_split(name, ",", simplify = T)
lastName = split[[1]]
firstName = split[[2]] %>%
str_split(" ",simplify = T) %>%
str_sub(1,1) %>%
str_c(collapse = "")
return(str_c(lastName,firstName,sep = ", "))},
error = function(e) print(name)
)
}
#FUNCTION TO IMPORT SALARIES
import_sal <- function(filename) {
dataframe = read_excel(filename)
dataframe = dataframe %>%
mutate(
Class = replace_na(Class,"Other"),
Year = 2000 + as.numeric(str_sub(filename,18,19)),
Class = as.factor(Class)
) %>%
select(c(Name,Class,Salary,Year))
return(dataframe)
}
filter_nonProf <- function(dataframe) {
dataframe %>%
filter(Class %in% c("Lecturer","Senior Lecturer",
"Associate Professor","Assistant Professor",
"Professor"))
}
#FUNCTION TO IMPORT GRADES
import_grade <- function(filename) {
dataframe = read_csv(filename)
dataframe = dataframe %>%
select(`INSTRUCTOR NAME`,
`AVG SECT GPA`,`GPA GRADES`)
dataframe = na.omit(dataframe) %>%
inner_join(dataframe %>%
group_by(`INSTRUCTOR NAME`) %>%
summarize(totalGPA = sum(`GPA GRADES`))) %>%
group_by(`INSTRUCTOR NAME`) %>%
summarize(
gpaAverage = sum(`AVG SECT GPA` * (`GPA GRADES`/totalGPA)),
nStudents = max(totalGPA),
year = 2000 + as.numeric(str_sub(filename,19,20))
) %>%
transmute(
gpaAverage = gpaAverage,
nStudents = nStudents,
year = year,
Name = sapply(`INSTRUCTOR NAME`,grade_to_salName,USE.NAMES = FALSE)
)
return(dataframe)
}
years = c("03",'04','05','06','07','08','09','10',
'11','12','13','14','15','16','17','18')
yearsWanted = 8:length(years)
salFiles = sapply(years[yearsWanted],sprintf,fmt = "Data/Salaries/Sal%s.xlsx")
salData = lapply(salFiles,import_sal)
salData = lapply(salData,filter_nonProf)
gradeFiles = sapply(years[yearsWanted],sprintf,fmt = "Data/Grades/Grades%s.csv")
gradeData = lapply(gradeFiles,import_grade)
salAll = bind_rows(salData)
gradeAll = bind_rows(gradeData)
View(gradeAll)
View(salAll)
?inner_join
#FUNCTION TO FIX NAMES OF TEACHERS
grade_to_salName <- function(name) {
tryCatch({
split = str_split(name, ",", simplify = T)
lastName = split[[1]]
firstName = split[[2]] %>%
str_split(" ",simplify = T) %>%
str_sub(1,1) %>%
str_c(collapse = "")
return(str_c(lastName,firstName,sep = ", "))},
error = function(e) print(name)
)
}
#FUNCTION TO IMPORT SALARIES
import_sal <- function(filename) {
dataframe = read_excel(filename)
dataframe = dataframe %>%
mutate(
Class = replace_na(Class,"Other"),
Year = 2000 + as.numeric(str_sub(filename,18,19)),
Class = as.factor(Class)
) %>%
select(c(Name,Class,Salary,Year))
return(dataframe)
}
filter_nonProf <- function(dataframe) {
dataframe %>%
filter(Class %in% c("Lecturer","Senior Lecturer",
"Associate Professor","Assistant Professor",
"Professor"))
}
#FUNCTION TO IMPORT GRADES
import_grade <- function(filename) {
dataframe = read_csv(filename)
dataframe = dataframe %>%
select(`INSTRUCTOR NAME`,
`AVG SECT GPA`,`GPA GRADES`)
dataframe = na.omit(dataframe) %>%
inner_join(dataframe %>%
group_by(`INSTRUCTOR NAME`) %>%
summarize(totalGPA = sum(`GPA GRADES`))) %>%
group_by(`INSTRUCTOR NAME`) %>%
summarize(
gpaAverage = sum(`AVG SECT GPA` * (`GPA GRADES`/totalGPA)),
nStudents = max(totalGPA),
year = 2000 + as.numeric(str_sub(filename,19,20))
) %>%
transmute(
gpaAverage = gpaAverage,
nStudents = nStudents,
Year = year,
Name = sapply(`INSTRUCTOR NAME`,grade_to_salName,USE.NAMES = FALSE)
)
return(dataframe)
}
years = c("03",'04','05','06','07','08','09','10',
'11','12','13','14','15','16','17','18')
yearsWanted = 8:length(years)
salFiles = sapply(years[yearsWanted],sprintf,fmt = "Data/Salaries/Sal%s.xlsx")
salData = lapply(salFiles,import_sal)
salData = lapply(salData,filter_nonProf)
gradeFiles = sapply(years[yearsWanted],sprintf,fmt = "Data/Grades/Grades%s.csv")
gradeData = lapply(gradeFiles,import_grade)
salAll = bind_rows(salData)
gradeAll = bind_rows(gradeData)
masterAll = inner_join(salAll,gradeAll, by = c("Name","Year"))
View(masterAll)
ggplot(masterAll, aes(y = salary, x = gpaAverage)) + geom_point()
ggplot(masterAll, aes(y = Salary, x = gpaAverage)) + geom_point()
ggplot(masterAll, aes(y = Salary, x = gpaAverage)) +
geom_point() +
xlim(2,4)
ggplot(masterAll, aes(y = Salary, x = gpaAverage)) +
geom_point(alpha = .05) +
xlim(2,4)
ggplot(masterAll, aes(y = Salary, x = gpaAverage)) +
geom_point(alpha = .05) +
xlim(2,4) +
geom_smooth()
#FUNCTION TO FIX NAMES OF TEACHERS
grade_to_salName <- function(name) {
tryCatch({
split = str_split(name, ",", simplify = T)
lastName = split[[1]]
firstName = split[[2]] %>%
str_split(" ",simplify = T) %>%
str_sub(1,1) %>%
str_c(collapse = "")
return(str_c(lastName,firstName,sep = ", "))},
error = function(e) print(name)
)
}
#FUNCTION TO IMPORT SALARIES
import_sal <- function(filename) {
dataframe = read_excel(filename)
dataframe = dataframe %>%
mutate(
Class = replace_na(Class,"Other"),
Year = 2000 + as.numeric(str_sub(filename,18,19)),
Class = as.factor(Class)
) %>%
select(c(Name,Org,Class,Salary,Year))
return(dataframe)
}
filter_nonProf <- function(dataframe) {
dataframe %>%
filter(Class %in% c("Lecturer","Senior Lecturer",
"Associate Professor","Assistant Professor",
"Professor"))
}
#FUNCTION TO IMPORT GRADES
import_grade <- function(filename) {
dataframe = read_csv(filename)
dataframe = dataframe %>%
select(`INSTRUCTOR NAME`,
`AVG SECT GPA`,`GPA GRADES`)
dataframe = na.omit(dataframe) %>%
inner_join(dataframe %>%
group_by(`INSTRUCTOR NAME`) %>%
summarize(totalGPA = sum(`GPA GRADES`))) %>%
group_by(`INSTRUCTOR NAME`) %>%
summarize(
gpaAverage = sum(`AVG SECT GPA` * (`GPA GRADES`/totalGPA)),
nStudents = max(totalGPA),
year = 2000 + as.numeric(str_sub(filename,19,20))
) %>%
transmute(
gpaAverage = gpaAverage,
nStudents = nStudents,
Year = year,
Name = sapply(`INSTRUCTOR NAME`,grade_to_salName,USE.NAMES = FALSE)
)
return(dataframe)
}
years = c("03",'04','05','06','07','08','09','10',
'11','12','13','14','15','16','17','18')
yearsWanted = 8:length(years)
salFiles = sapply(years[yearsWanted],sprintf,fmt = "Data/Salaries/Sal%s.xlsx")
salData = lapply(salFiles,import_sal)
salData = lapply(salData,filter_nonProf)
gradeFiles = sapply(years[yearsWanted],sprintf,fmt = "Data/Grades/Grades%s.csv")
gradeData = lapply(gradeFiles,import_grade)
salAll = bind_rows(salData)
gradeAll = bind_rows(gradeData)
masterAll = inner_join(salAll,gradeAll, by = c("Name","Year"))
ggplot(masterAll, aes(y = Salary, x = gpaAverage)) +
geom_point(alpha = .05) +
xlim(2,4) +
geom_smooth()
ggplot(masterAll, aes(y = Salary, x = gpaAverage,
colour = Class)) +
geom_point(alpha = .05) +
xlim(2,4) +
geom_smooth()
ggplot(masterAll, aes(y = Salary, x = gpaAverage,
colour = Class)) +
geom_point(alpha = .2) +
xlim(2,4) +
geom_smooth()
ggplot(masterAll, aes(y = Salary, x = gpaAverage,
colour = Class)) +
geom_point(alpha = .1) +
xlim(2,4) +
geom_smooth()
ggplot(masterAll, aes(y = log(Salary), x = gpaAverage,
colour = Class)) +
geom_point(alpha = .1) +
xlim(2,4) +
geom_smooth()
departmentTotal = masterAll %>%
group_by(Class) %>%
summarize(departStudents = sum(nStudents))
View(departmentTotal)
ClassTotal = masterAll %>%
group_by(Class) %>%
summarize(departStudents = sum(nStudents))
ClassTotal
ClassGPA = inner_join(masterAll,ClassTotal)
ClassGPA
ClassGPA = inner_join(masterAll,ClassTotal) %>%
group_by(Class) %>%
summarize(
avgGPA = sum(gpaAverage * (nStudents/departStudents))
)
View(ClassGPA)
ggplot(ClassGPA, aes(x = Class, y = avgGPA)) + geom_bar()
ggplot(ClassGPA, aes(y = Class, x = avgGPA)) + geom_bar() + coord_flip()
ggplot(ClassGPA, aes(x = Class)) + geom_bar(aes(y=avgGPA))
ggplot(ClassGPA, aes(x = Class)) + geom_col(aes(y=avgGPA))
ggplot(ClassGPA, aes(x = Class)) + geom_col(aes(y=avgGPA)) + ylim(3.5)
ggplot(ClassGPA, aes(x = Class)) + geom_col(aes(y=avgGPA)) + ylim(3.5,4)
ggplot(ClassGPA, aes(x = Class)) + geom_col(aes(y=avgGPA)) + ylim(3,4)
ggplot(ClassGPA, aes(x = Class)) + geom_col(aes(y=avgGPA)) + ylim(3,4)
ggplot(ClassGPA, aes(x = Class)) + geom_col(aes(y=avgGPA)) + ylim(2,4)
ggplot(ClassGPA, aes(x = Class)) + geom_col(aes(y=avgGPA)) +
scale_y_continuous(limits = c(3,4))
ggplot(ClassGPA, aes(x = Class)) + geom_col(aes(y=avgGPA)) +
scale_y_continuous(limits = c(3,4), oob = rescale_none)
library(scale)
library(scales)
ggplot(ClassGPA, aes(x = Class)) + geom_col(aes(y=avgGPA)) +
scale_y_continuous(limits = c(3,4), oob = rescale_none)
ggplot(ClassGPA, aes(x = Class)) + geom_col(aes(y=avgGPA)) +
scale_y_continuous(limits = c(3,3.4), oob = rescale_none)
ClassGPA = inner_join(masterAll,ClassTotal) %>%
group_by(Class,Year) %>%
summarize(
avgGPA = sum(gpaAverage * (nStudents/departStudents))
)
ggplot(masterAll, aes(y = log(Salary), x = gpaAverage,
colour = Class)) +
geom_point(alpha = .1) +
xlim(2,4) +
geom_smooth(method = 'lm')
ggplot(masterAll, aes(y = log(Salary), x = gpaAverage,
colour = Class)) +
geom_point(alpha = .1) +
xlim(2,4) +
geom_smooth()
levels(masterAll$Org)
typeof(masterAll$Org)
levels(factor(masteAll$Org))
levels(factor(masterAll$Org))
ggplot(masterAll, aes(y = log(Salary), x = gpaAverage,
colour = Class)) +
geom_point(alpha = .1) +
xlim(2,4) +
geom_smooth() +
facet_wrap(~Org)
ggplot(masterAll, aes(x = log(Salary), y = gpaAverage,
colour = Class)) +
geom_point(alpha = .1) +
xlim(2,4) +
geom_smooth() +
facet_wrap()
ggplot(masterAll, aes(x = log(Salary), y = gpaAverage,
colour = Class)) +
geom_point(alpha = .1) +
xlim(2,4) +
geom_smooth()
ggplot(masterAll, aes(x = log(Salary), y = gpaAverage,
colour = Class)) +
geom_point(alpha = .1)+
geom_smooth()
ggplot(masterAll, aes(y = log(Salary), x = gpaAverage,
colour = Class)) +
geom_point(alpha = .1)+
geom_smooth()
ggplot(masterAll, aes(y = log(Salary), x = gpaAverage,
colour = Class)) +
geom_point(alpha = .1)+
xlim(2,4)
ggplot(masterAll, aes(y = log(Salary), x = gpaAverage,
colour = Class)) +
geom_point(alpha = .1)+
xlim(2,4) +
geom_smooth()
